<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXD801E42BF3A6433990CCF762A5D4E834">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0.600000024</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">PizzaKunai</string>
			<bool name="RequiresHandle">true</bool>
			<BinaryString name="Tags"></BinaryString>
			<Content name="TextureId"><url>rbxassetid://553744366</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX0EE931B84B9B43358FF5837E81D2D25C">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0.0387969986</X>
					<Y>31.0267239</Y>
					<Z>0.00398299983</Z>
					<R00>-0.00242899964</R00>
					<R01>-0.995443344</R01>
					<R02>0.0953245535</R02>
					<R10>-0.999771774</R10>
					<R11>0.00444076443</R11>
					<R12>0.0208979081</R12>
					<R20>-0.0212259945</R20>
					<R21>-0.0952520445</R21>
					<R22>-0.99522692</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.5</Y>
					<Z>1.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX07CEB974392847F998570B79312036C2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>rbxassetid://553743763</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.600000024</X>
						<Y>0.600000024</Y>
						<Z>0.600000024</Z>
					</Vector3>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureId"><url>rbxassetid://553743901</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX077590835D2B4B0590C8961C4A331B4E">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">Clink</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">3</float>
					<bool name="Playing">false</bool>
					<token name="RollOffMode">0</token>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>rbxasset://sounds/unsheath.wav</url></Content>
					<BinaryString name="Tags"></BinaryString>
					<double name="TimePosition">0</double>
					<float name="Volume">1</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXC6C3F17C7EF942529CF549976EB40808">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">Clash</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1</float>
					<bool name="Playing">false</bool>
					<token name="RollOffMode">0</token>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=11113679</url></Content>
					<BinaryString name="Tags"></BinaryString>
					<double name="TimePosition">0</double>
					<float name="Volume">1</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4BB394F1C19B4737B637408AF714DF68">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">Throw</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1.5</float>
					<bool name="Playing">false</bool>
					<token name="RollOffMode">0</token>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>rbxasset://sounds/swordslash.wav</url></Content>
					<BinaryString name="Tags"></BinaryString>
					<double name="TimePosition">0</double>
					<float name="Volume">1</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXA7083D7D07174E99BCFBD9AA40D5ABF0">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<string name="ScriptGuid">{05681CBB-E3D5-4E95-A736-E0674CA58380}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	ToolEquipped = false
	LocalObjects = {}
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or  CurrentTransparency == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXEA6FED8C82E64F8A99C5CDBF63867431">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid">{1B933352-3E9D-4E4F-90C5-0F0678C1467A}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX065D858E587742B4996B4B5143EE0640">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=313060411</url></Content>
				<string name="Name">Throw</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX6B9053DDC3E34E98894B6A9F004C7799">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>-0.161813602</X>
					<Y>32.5569916</Y>
					<Z>0.169902757</Z>
					<R00>0.656410038</R00>
					<R01>0.745116472</R01>
					<R02>-0.118014313</R02>
					<R10>-0</R10>
					<R11>0.156433776</R11>
					<R12>0.987688422</R12>
					<R20>0.754404366</R20>
					<R21>-0.648328602</R21>
					<R22>0.102684692</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">40</float>
				<CoordinateFrame name="Focus">
					<X>0.0683148354</X>
					<Y>30.6309948</Y>
					<Z>-0.0303328484</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX2DF2F254DA9B42E09ACB95555B8237BA">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid">{5D97CA24-7EE3-49D1-B1A5-1C9D6478534E}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Functions = require(script:WaitForChild("Functions"))

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Anchored = false,
	CanCollide = true,
	Locked = true,
}

Animations = {
	Throw = {Animation = Tool:WaitForChild("Throw"), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.75},
}

Sounds = {
	Throw = Handle:WaitForChild("Throw"),
	Clash = Handle:WaitForChild("Clash"),
	Clink = Handle:WaitForChild("Clink"),
}

StarsReady = {}
Projectiles = {}

Gravity = 196.20
Rate = (1 / 60)
ReloadTime = 1.5
Damage = 15

Kunais = {}
LastAttack = 0
Loaded = false
Throwing = false
SwitchEvenOddParity = -1

ManagingProjectiles = false
ToolEquipped = false

BaseKunai = Handle:Clone()
BaseKunai.Name = "Projectile"
BaseKunai.Transparency = 0
BaseKunai.CanCollide = true

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

for i, v in pairs(Tool:GetChildren()) do
	if v:IsA("BasePart") and v ~= Handle then
		v:Destroy()
	end
end

Handle.Transparency = 0
Tool.Enabled = true

function Throw(Kunai, SpawnPos, TargetPos)
	local ThrowDirection = CFrame.Angles(0, Kunai.Angle, 0) * (TargetPos - Handle.Position).Unit--CFrame.new(SpawnPos, TargetPos)
	local MoveDirection = (CFrame.new(SpawnPos, SpawnPos + ThrowDirection) * CFrame.Angles(math.pi, math.pi, (math.pi / 2)))
	local Force = 30
	local Velocity = (ThrowDirection * Force)
	local Mass = (Kunai.Part:GetMass() * Gravity)
	local BodyVelocity = Create("BodyForce"){
		force = Vector3.new(0, Mass, 0),
		Parent = Kunai.Part,
	}
	local BodyGyro = Create("BodyGyro"){
		maxTorque = Vector3.new(math.huge, math.huge, math.huge),
		cframe = MoveDirection,
		Parent = Kunai.Part,
	}
	Debris:AddItem(Kunai.Part, 10)
	Kunai.Part.CanCollide = false
	Kunai.Part.Parent = game:GetService("Workspace")
	for i, v in pairs(Kunai.Part:GetChildren()) do
		if v:IsA("JointInstance") then
			v:Destroy()
		end
	end
	SpawnPos = SpawnPos + ThrowDirection * 1
	Kunai.Part.CFrame = MoveDirection
	Kunai.Part.Velocity = Velocity
	Spawn(function()
		local KunaiStick
		KunaiStick = RunService.Stepped:connect(function(Step)
			FlyProjectile(Kunai.Part)
		end)
		Kunai.Part.Changed:connect(function(Property)
			if Property == "Parent" and not Kunai.Part.Parent then
				if KunaiStick then
					KunaiStick:disconnect()
				end
			end
		end)
	end)
	Kunai.Part.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent then
			return
		end
		FlyProjectile(Kunai.Part, Hit)
	end)
end

function NewKunai()
	local Kunai = BaseKunai:Clone()
	local KunaiWeld = Create("Weld"){
		Name = "Weld",
		Part0 = Kunai,
		Part1 = Handle,
		C0 = CFrame.new(0, 0, 0),
		Parent = Kunai,
	}
	return Kunai
end

function Activated()
	if not ToolEquipped or not CheckIfAlive() or not Tool.Enabled then
		return
	end
	Tool.Enabled = false
	Handle.Transparency = 1
	local Now = tick()
	if not Loaded then
		Kunais = {}
		local Kunai = NewKunai()
		Kunai.Weld.C1 = (CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, -(math.pi /2)) + Vector3.new(0, 0, 0))
		table.insert(Kunais, {Part = Kunai, Index = (#Kunais + 1), Angle = 0})
		Kunai.Parent = Tool
		LastAttack = Now
		Loaded = true
	elseif (Now - LastAttack) < 0.70 and #Kunais < 5 then
		Sounds.Clink:Play()
		local Angle = (math.ceil(#Kunais / 2) * math.pi / 8 * SwitchEvenOddParity)
		SwitchEvenOddParity = -SwitchEvenOddParity
		local Kunai = NewKunai()
		Kunai.Weld.C1 = (CFrame.new(0.5, -0.5, 0) * CFrame.Angles(0, Angle, -(math.pi / 2)) + Vector3.new((-0.75 * math.sin(Angle) - 0.5), (0.65 * math.cos(Angle) - 0.25), 0))
		table.insert(Kunais, {Part = Kunai, Index = (#Kunais + 1), Angle = Angle})
		Kunai.Parent = Tool
		Loaded = true
	elseif (Now - LastAttack) > 1.45 then
		local MouseData = InvokeClient("MouseData")
		if not ToolEquipped or not CheckIfAlive() or Throwing or not MouseData or not MouseData.Position then
			return
		end
		Throwing = true
		Sounds.Throw:Play()
		Spawn(function()
			InvokeClient("PlayAnimation", Animations.Throw)
		end)
		local SpawnPos = (Handle.CFrame * CFrame.new(0, -0.75, -6)).p
		local TargetPos = MouseData.Position
		if Loaded then
			SwitchEvenOddParity = 1
			for i, v in pairs(Kunais) do
				print(i, v)
				local Angle = (math.ceil((i - 1) / 2) * math.pi / 12 * SwitchEvenOddParity)
				SwitchEvenOddParity = -SwitchEvenOddParity
				v.Angle = Angle
				Throw(v, SpawnPos, TargetPos)
			end
			Kunais = {}
		end
		Throwing = false
		wait(ReloadTime)
		Handle.Transparency = 0
		Loaded = false
	end
	Tool.Enabled = true
end

function FlyProjectile(Part, Hit)
	if Part.Name == "Effect" then
		return
	end
	local AlreadyHit = false
	local function PartHit(Hit)
		if not Hit or not Hit.Parent or not CheckIfAlive() or Part.Name == "Effect" then
			return
		end
		local character = Hit.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		if not character then
			return
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player and (player == Player or Functions.IsTeamMate(Player, player)) then
			return
		end
		local humanoid = character:FindFirstChild("Humanoid")
		if not humanoid or humanoid.Health == 0 then
			return
		end
		Functions.UntagHumanoid(humanoid)
		Functions.TagHumanoid(humanoid, Player)
		humanoid:TakeDamage(Damage)
		return character
	end
	local function CheckForContact(Hit)
		local Directions = {{Vector = Part.Velocity.Unit, Length = 2}, ((Hit and {Vector = CFrame.new(Part.Position, Hit.Position).lookVector, Length = 2}) or nil)}
		local ClosestRay = {DistanceApart = math.huge}
		for i, v in pairs(Directions) do
			if v then
				local Direction = CFrame.new(Part.Position, (Part.CFrame + v.Vector * 2).p).lookVector
				local RayHit, RayPos, RayNormal = Functions.CastRay((Part.Position + Vector3.new(0, 0, 0)), Direction, v.Length, {((Player and Player.Character) or nil), Part}, false)
				if RayHit then
					local DistanceApart = (Part.Position - RayPos).Magnitude
					if DistanceApart < ClosestRay.DistanceApart then
						ClosestRay = {Hit = RayHit, Pos = RayPos, Normal = RayNormal, DistanceApart = DistanceApart}
					end
				end
			end
		end
		return ((ClosestRay.Hit and ClosestRay) or nil)
	end
	local ClosestRay = CheckForContact(Hit)
	if ClosestRay then
		for i, v in pairs(Part:GetChildren()) do
			if string.find(string.lower(v.ClassName), string.lower("Body")) then
				v:Destroy()
			end
		end
		Part.Velocity = Vector3.new(0, 0, 0)
		Part.RotVelocity = Vector3.new(0, 0, 0)
		Part.Size = Vector3.new(0.2, 0.2, 0.2)
		Part.CanCollide = false
		local SuccessfullyHit = PartHit(ClosestRay.Hit)
		local StickCFrame = CFrame.new(ClosestRay.Pos, (CFrame.new(ClosestRay.Pos) + ClosestRay.Normal * 2).p) * CFrame.Angles((math.pi / 2), 0, 0)
		StickCFrame = (StickCFrame * CFrame.new(0, -((Part.Size.Y / 1.5) - ((SuccessfullyHit and 0.125) or 0)), 0))
		StickCFrame = (CFrame.new(StickCFrame.p, Handle.Position) * CFrame.Angles(Part.CFrame:toEulerAnglesXYZ()))
		local Weld = Create("Motor6D"){
			Part0 = Part,
			Part1 = ClosestRay.Hit,
			C0 = StickCFrame:inverse(),
			C1 = ClosestRay.Hit.CFrame:inverse(),
			Parent = Part,
		}
		local Hit = ClosestRay.Hit
		local SoundPart = BasePart:Clone()
		SoundPart.Name = "Effect"
		SoundPart.Transparency = 1
		SoundPart.Anchored = true
		SoundPart.CanCollide = false
		local Sound = Sounds.Clash:Clone()
		Sound.Pitch = (math.random(1000, 1500) * 0.001)
		Sound.Parent = SoundPart
		Debris:AddItem(SoundPart, 1.5)
		SoundPart.CFrame = Part.CFrame
		SoundPart.Parent = game:GetService("Workspace")
		Sound:Play()
		Part.Name = "Effect"
	end
	if not ManagingProjectiles then
		ManagingProjectiles = true
		Spawn(function()
			while #Projectiles > 0 and ManagingProjectiles and CheckIfAlive() do
				for i, v in pairs(Projectiles) do
					if v and v.Parent and v.Name ~= "Effect" then
						FlyProjectile(v)
					end
				end
				wait()
			end
		end)
	end
end

function CheckIfAlive()
	return (Player and Player.Character) and (Player.Character:findFirstChild('Humanoid') and Player.Character.Humanoid.Health > 0)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	for i, v in pairs(Kunais) do
		if v and v.Parent then
			v:Destroy()
		end
	end
	Kunais = {}
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function OnServerInvoke(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBXE5A007B8055B4C9197DFCF23E28E6C8A">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Functions</string>
					<string name="ScriptGuid">{F10DFE7F-2DED-4C81-B79D-43B5D791053F}</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {}

function Functions.Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function Functions.GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Functions.Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)))
end

function Functions.IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function Functions.TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function Functions.UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Functions.CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function Functions.CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or Functions.CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function Functions.CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and Functions.CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

return Functions]]></ProtectedString>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
	</Item>
</roblox>